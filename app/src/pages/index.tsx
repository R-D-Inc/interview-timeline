import { GetServerSideProps } from "next";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { useEffect, useState } from "react";
import { fetchUsers } from "../libs/users";
import styles from "../styles/Home.module.css";

export type User = {
  id: string;
  name: string;
};

export default function Home(props: { users: User[] }) {
  const [page, setPage] = useState<number>(0)
  const [users, setUsers] = useState<User[]>(props.users)

  useEffect(() => {
    ; (async () => {
      const fetchedUsers = await fetchUsers(10, page)
      setUsers(fetchedUsers)
    })
  }, [page])

  const handlePrevButton = () => {
    if (page <= 0) return
    setPage(page - 1)
  }

  const handleNextButton = () => {
    setPage(page + 1)
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>Welcome</h1>

        <button onClick={handlePrevButton}>{'<<'}</button>
        <div>
          <ul>{users.map(user => (
            <li key={user.id}>
              <Link href={{
                pathname: '/users/[uid]',
                query: { uid: user.id },
              }}>
                <a>{user.name}</a>
              </Link>
            </li>
          ))}</ul>
        </div>
        <button onClick={handleNextButton}>{'>>'}</button>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}

export const getServerSideProps: GetServerSideProps = async () => {
  const users = await fetchUsers(10, 0)

  return {
    props: {
      users,
    },
  };
};
